name: Terraform CI/CD

on:
  workflow_dispatch:
    inputs:
      customer:
        description: 'Customer name (e.g., hyc, stttelemedia)'
        required: true
      environment:
        description: 'Environment (Dev or Prod)'
        required: true
      destroy:
        description: 'Destroy resources? (true or false)'
        required: true

jobs:
  terraform:
    name: Terraform with OIDC
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login with OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          audience: api://AzureADTokenExchange

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init -input=false

      - name: Handle Terraform Workspace
        run: |
          WORKSPACE="${{ github.event.inputs.customer }}-${{ github.event.inputs.environment | toLower }}"
          if terraform workspace list | grep -q "$WORKSPACE"; then
            terraform workspace select "$WORKSPACE"
          else
            terraform workspace new "$WORKSPACE"
          fi

      - name: Terraform Plan (Apply or Destroy)
        run: |
          VAR_FILE="customer/${{ github.event.inputs.customer }}/${{ github.event.inputs.environment | toLower }}.tfvars"

          if [ "${{ github.event.inputs.destroy }}" == "true" ]; then
            terraform plan -destroy -input=false -var-file="$VAR_FILE" \
              -var="client_id=${{ secrets.ARM_CLIENT_ID }}" \
              -var="tenant_id=${{ secrets.ARM_TENANT_ID }}" \
              -var="subscription_id=${{ secrets.ARM_SUBSCRIPTION_ID }}" \
              -var="use_oidc=true" \
              -out=tfplan
          else
            terraform plan -input=false -var-file="$VAR_FILE" \
              -var="client_id=${{ secrets.ARM_CLIENT_ID }}" \
              -var="tenant_id=${{ secrets.ARM_TENANT_ID }}" \
              -var="subscription_id=${{ secrets.ARM_SUBSCRIPTION_ID }}" \
              -var="use_oidc=true" \
              -out=tfplan
          fi

      - name: Terraform Apply (Skip if Destroy)
        if: ${{ github.event.inputs.destroy == 'false' }}
        run: terraform apply -input=false -auto-approve tfplan

      - name: Terraform Destroy (Skip if Apply)
        if: ${{ github.event.inputs.destroy == 'true' }}
        run: terraform apply -auto-approve tfplan
